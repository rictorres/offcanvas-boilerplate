/* ==========================================================================
   Variables
   ========================================================================== */

@sidebar-width: 240px;
@transition-duration: 0.3s;


/* ==========================================================================
   Generic styles
   ========================================================================== */

html {
  // height: 100%;

  font-size: 62.5%; // Needed to make 1em equal 10px
}

body {
  // height: 100%;

  font-family: Arial, sans-serif;
  .font-size(16);

  background: #fff;
}

*,
*:after,
*:before {
  box-sizing: border-box;
}


/* Typography
   ================================================= */

h1 {
  .font-size(28);
}

h2 {
  .font-size(24);
}

h3 {
  .font-size(20);
}

h4 {
  .font-size(18);
}

p {

}


/* Images
   ================================================= */

img {
  max-width: 100%;
  height: auto;
}

.lt-ie9 img {
  width: auto;
}


/* Videos
   ================================================= */

video {
  width: 100%;
  height: auto;
}

.fluid-video {
  position: relative;
  padding-bottom: 56.25%; /* 16:9 */
  padding-top: 25px;
  height: 0;

  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}


/* Container
   ================================================= */

.container {
  position: relative;
  left: 0;

  // height: 100%;

  transition: all @transition-duration ease;
}

/* ==========================================================================
   Modules
   ========================================================================== */

/* Sidebar
   ================================================= */

.sidebar {
  position: fixed;
  top: 0;
  overflow: auto;

  width: @sidebar-width;
  height: 100%;

  background: lightgreen;

  transition: all @transition-duration ease;

  .no-js & {
    position: static;

    width: 100%;
    height: auto;
  }
}

// progressive enhancement,
// because we can only be sure that the user has the most basic setup,
// also we use javascript to detect support for css transforms.
// graceful degradation for the no-javascript fallback

.sidebar-left {
  left: (-@sidebar-width);

  &.sidebar-active {
    left: 0;
  }

  .csstransforms & {
    left: 0;
    transform: translate3d(-100%, 0, 0);

    &.sidebar-active {
      transform: translate3d(0, 0, 0);
    }
  }

  .no-js & {
    left: 0;
  }
}

.sidebar-right {
  right: (-@sidebar-width);

  &.sidebar-active {
    right: 0;
  }

  .csstransforms & {
    right: 0;
    transform: translate3d(100%, 0, 0);

    &.sidebar-active {
      transform: translate3d(0, 0, 0);
    }
  }

  .no-js & {
    right: 0;
  }
}

// the only way to optimise performance for push sidebars
// is to put it inside another container.
// doing that would affect our markup semantic :(
// so i'm staying with left/right positioning.

.sidebar-push {

  &.sidebar-toright {
    left: @sidebar-width;
  }

  &.sidebar-toleft {
    left: (-@sidebar-width);
  }
}

.btn-sidebar-toggle {

}

.no-js .btn-sidebar-toggle {
  display: none;
}


/* ==========================================================================
   Content
   ========================================================================== */

.content {
  padding: 20px;

  .no-js & {
    margin: 0;
  }
}


@media print,
(-o-min-device-pixel-ratio: 5/4),
(-webkit-min-device-pixel-ratio: 1.25),
(min-resolution: 120dpi) {
}