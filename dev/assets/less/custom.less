/* ==========================================================================
   Variables
   ========================================================================== */

@sidebar-width: 240px;
@sidebar-bg: #f35;
@transition-duration: 0.3s;


/* ==========================================================================
   Generic styles
   ========================================================================== */

html {
  // height: 100%;

  font-size: 62.5%;
}

body {
  // height: 100%;

  font-family: Arial, sans-serif;
  .font-size(16);

  background: #fff;
}

*,
*:after,
*:before {
  box-sizing: border-box;
}


/* Typography
   ================================================= */

h1 {
  .font-size(28);
}

h2 {
  .font-size(24);
}

h3 {
  .font-size(20);
}

h4 {
  .font-size(18);
}

p {

}


/* Images
   ================================================= */

img {
  max-width: 100%;
  height: auto;
}

.lt-ie9 img {
  width: auto;
}


/* Videos
   ================================================= */

video {
  width: 100%;
  height: auto;
}

.fluid-video {
  position: relative;
  padding-bottom: 56.25%; /* 16:9 */
  padding-top: 25px;

  height: 0;

  iframe {
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;
  }
}


/* Container
   ================================================= */

.container {
  position: relative;
  left: 0;

  // height: 100%;

  transition: all @transition-duration ease;

  &::after {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 900;

    width: 0;
    height: 0;

    background: rgba(0,0,0,0.2);

    content: '';
    opacity: 0;
    transition:
      opacity 0.5s,
      width 0.1s 0.5s,
      height 0.1s 0.5s;
  }

  .has-sidebar-open & {
    &::after {
      width: 100%;
      height: 100%;

      cursor: pointer;
      opacity: 1;
      transition: opacity 0.5s;
    }
  }
}


/* ==========================================================================
   Modules
   ========================================================================== */

/* Sidebar
   ================================================= */

.sidebar {
  position: fixed;
  top: 0;
  overflow: auto;
  z-index: 1000;

  width: @sidebar-width;
  height: 100%;

  background: @sidebar-bg;

  transition: all @transition-duration ease;

  .no-js & {
    position: static;

    width: 100%;
    height: auto;
  }
}

// progressive enhancement,
// because we can only be sure that the user has the most basic setup,
// also we use javascript to detect support for css transforms.
// graceful degradation for the no-javascript fallback

.sidebar-left {
  left: (-@sidebar-width);

  &.is-active {
    left: 0;
  }

  .csstransforms & {
    left: 0;

    transform: translate3d(-100%, 0, 0);

    &.is-active {
      transform: translate3d(0, 0, 0);
    }
  }

  .no-js & {
    left: 0;
  }
}

.sidebar-right {
  right: (-@sidebar-width);

  &.is-active {
    right: 0;
  }

  .csstransforms & {
    right: 0;

    transform: translate3d(100%, 0, 0);

    &.is-active {
      transform: translate3d(0, 0, 0);
    }
  }

  .no-js & {
    right: 0;
  }
}

// to optimise performance for push sidebars
// is to put it inside another container.
// doing that would affect our markup semantic :(
// so i'm staying with left/right positioning.

.has-sidebar-push {

  &.has-sidebar-toright {
    left: @sidebar-width;
  }

  &.has-sidebar-toleft {
    left: (-@sidebar-width);
  }
}

.has-sidebar-open {
  overflow: hidden;
}

.sidebar-content {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 100%;
  height: 100%;
}
  .sidebar-content-item {
    background: #aaa;
  }


/* ==========================================================================
   Content
   ========================================================================== */

.content {
  padding: 20px;

  .no-js & {
    margin: 0;
  }
}


/* Top / Bottom Bar
   ================================================= */

.content-bar {
  position: fixed;
  left: 0;
  z-index: 800;

  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;

  transition: all @transition-duration ease;

  .has-sidebar-toright & {
    transform: translate3d(@sidebar-width, 0, 0);
  }
  .has-sidebar-toleft & {
    transform: translate3d(-@sidebar-width, 0, 0);
  }
}
  .content-bar-top {
    top: 0;
  }
  .content-bar-bottom {
    bottom: 0;
  }

// codepen.io/rictorres/full/ycudz
.btn-sidebar-toggle {
  padding: 1.9em 1.6em;

  width: 2em;
  height: auto;

  font-size: 10px;

  background-color: @sidebar-bg;
  background-color: fade(@sidebar-bg, 50%);

  transition: all 0.3s ease-out;
  box-sizing: content-box;

  .has-sidebar-open & {
    pointer-events: none;
  }
}
.btn-sidebar-toggle.is-active {
  background-color: @sidebar-bg;
}
  .btn-sidebar-toggle:hover,
  .btn-sidebar-toggle:focus {
    background-color: @sidebar-bg;
  }
  .btn-sidebar-toggle span {
    position: relative;

    display: block;
    width: 100%;
    height: .2em;

    background-color: #fff;
  }
  .btn-sidebar-toggle span,
  .btn-sidebar-toggle span:before,
  .btn-sidebar-toggle span:after {
    .transition(all 0.8s);
  }

    .btn-sidebar-toggle span:before,
    .btn-sidebar-toggle span:after {
      position: absolute;
      margin-top: -.6em;

      width: 100%;
      height: .2em;

      background-color: #fff;

      content: '';
    }
    .btn-sidebar-toggle span:after {
      margin-top: .6em;
    }

  .btn-sidebar-toggle.is-active span {
    background: transparent;
  }
    .btn-sidebar-toggle.is-active span:before {
      transform: rotate(45deg) translate(.5em, .4em);
    }

    .btn-sidebar-toggle.is-active span:after {
      transform: rotate(-45deg) translate(.45em, -.35em);
    }

.no-js .btn-sidebar-toggle {
  display: none;
}


@media print,
(-o-min-device-pixel-ratio: 5/4),
(-webkit-min-device-pixel-ratio: 1.25),
(min-resolution: 120dpi) {
}